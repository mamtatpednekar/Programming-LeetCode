class Solution(object):
    def longestConsecutive(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        longest = 0
        numsSet = set(nums)
        for n in nums:
            if (n - 1) not in numsSet:
                length = 0
                while (n + length) in numsSet:
                    length += 1
                longest = max(length, longest)
        return longest


#Solution 2 
class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        longest = 0
        calculatedLength = 0
        allSet = set(nums)
        for num in nums:
            if (num-1) not in allSet:
                calculatedLength = 0
                while (num + calculatedLength) in allSet:
                    calculatedLength += 1
                longest = max(longest, calculatedLength)
        return longest


        
